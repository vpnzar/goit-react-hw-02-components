{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics .js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","s","statContainer","map","option","statBtn","type","name","onClick","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","statsList","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","e","difference","Math","floor","handleFeedback","target","innerText","setState","prevState","this","objName","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yUA4BeA,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,cAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,qBACEJ,UAAWC,IAAEI,QACbC,KAAK,SAELC,KAAMH,EACNI,QAAST,EALX,SAOGK,GAJIK,qBC0BAC,EAlCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAKf,UAAU,QAAf,SACE,qBAAIA,UAAWC,IAAEe,UAAjB,UACE,+BACE,uCACA,+BAAOL,OAET,+BACE,0CACA,+BAAOC,OAET,+BACE,sCACA,+BAAOC,OAET,+BACE,wCACA,+BAAOC,OAET,+BACE,oDACA,iCAAOC,EAAP,gBCTOE,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCQQC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,6BAAKA,OCELC,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQZ,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBY,gCAAkC,SAAAC,GAChC,MAA+B,EAAKH,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACnBc,EAAa,EACXb,EAAQ,EAAKU,qBAGnB,OADoBG,EAAL,IADIf,EAAUC,EACI,IAA6B,IAAPF,EAAcG,EAC9Dc,KAAKC,MAAMF,I,EAGpBG,eAAiB,SAAAJ,GACf,IAAMnB,EAAOmB,EAAEK,OAAOC,UACtB,EAAKC,UAAS,SAAAC,GAAS,sBAAQ3B,EAAO2B,EAAU3B,GAAQ,O,4CAG1D,WACE,MAA+B4B,KAAKZ,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfW,EAAwDW,KAAxDX,mBAAoBC,EAAoCU,KAApCV,gCACtBW,EAAUC,OAAOC,KAAKH,KAAKZ,OAEjC,OACE,qBAAKvB,UAAU,MAAf,SACE,sBAAKA,UAAWC,IAAES,WAAlB,UACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEpB,QAASsC,EACTrC,gBAAiBoC,KAAKL,mBAG1B,cAAC,EAAD,CAASZ,MAAM,aAAf,SAC4B,IAAzBM,IACC,cAAC,EAAD,CAAcH,QAAQ,sBAEtB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAAoBU,iB,GAlDlBc,aA4DHjB,IC/DfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,+BAA+B,UAAY,gC,kBCA1ED,EAAOC,QAAU,CAAC,QAAU,iCAAiC,cAAgB,0C","file":"static/js/main.64713d68.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.statContainer}>\r\n      {options.map(option => (\r\n        <div\r\n          className={s.statBtn}\r\n          type=\"button\"\r\n          key={uuidv4()}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className=\"stats\">\r\n    <ul className={s.statsList}>\r\n      <li>\r\n        <b>Good: </b>\r\n        <span>{good}</span>\r\n      </li>\r\n      <li>\r\n        <b>Neutral: </b>\r\n        <span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        <b>Bad: </b>\r\n        <span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        <b>Total: </b>\r\n        <span>{total}</span>\r\n      </li>\r\n      <li>\r\n        <b>Positive feedback: </b>\r\n        <span>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <h2>{message}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import './App.css';\r\nimport s from './components/Statistics/Statistics.module.css';\r\nimport React, { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics ';\r\nimport Section from './components/Section/Section';\r\nimport Notification from './components/Notification/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = e => {\r\n    const { good, neutral, bad } = this.state;\r\n    let difference = 0;\r\n    const total = this.countTotalFeedback();\r\n    const badNeutral = neutral + bad;\r\n    badNeutral === 0 ? (difference = 100) : (difference = (good * 100) / total);\r\n    return Math.floor(difference);\r\n  };\r\n\r\n  handleFeedback = e => {\r\n    const name = e.target.innerText;\r\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const { countTotalFeedback, countPositiveFeedbackPercentage } = this;\r\n    const objName = Object.keys(this.state);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className={s.Statistics}>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              options={objName}\r\n              onLeaveFeedback={this.handleFeedback}\r\n            />\r\n          </Section>\r\n          <Section title=\"Statistics\">\r\n            {countTotalFeedback() === 0 ? (\r\n              <Notification message=\"No feedback given\" />\r\n            ) : (\r\n              <Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={countTotalFeedback()}\r\n                positivePercentage={countPositiveFeedbackPercentage()}\r\n              />\r\n            )}\r\n          </Section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__3DnFo\",\"statsList\":\"Statistics_statsList__1iGqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statBtn\":\"FeedbackOptions_statBtn__32k7T\",\"statContainer\":\"FeedbackOptions_statContainer__3L8dS\"};"],"sourceRoot":""}